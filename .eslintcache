[{"/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/App.js":"1","/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/reportWebVitals.js":"2","/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/index.js":"3"},{"size":5530,"mtime":1614217782093,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1609982029303,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1609982029303,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"9asx28",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/App.js",["15","16","17","18","19","20","21","22","23","24"],"// import logo from './logo.svg';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport ReactAudioPlayer from 'react-audio-player';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory\n} from \"react-router-dom\";\nimport { useState } from 'react';\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBwDxECAF6BY1nX2l7FWKE7qPNX80f_iNs\",\n  authDomain: \"cs493-2021-957ba.firebaseapp.com\",\n  projectId: \"cs493-2021-957ba\",\n  storageBucket: \"cs493-2021-957ba.appspot.com\",\n  messagingSenderId: \"702882989073\",\n  appId: \"1:702882989073:web:b1c364800e7905af9a9db0\",\n  measurementId: \"G-KLSL1WY0EW\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n const App = () => {\n//function App () {\n  const [user, setUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const provider = new firebase.auth.GoogleAuthProvider();\n  var songs = [];\n\n  const googleSignIn = () => {\n    firebase.auth()\n      .signInWithPopup(provider)\n      .then((res) => {\n        console.log('Signed in!')\n        setIsSignedIn(true)\n      })\n  }\n\n  const handleSignUp = () => {\n    firebase.auth()\n      .createUserWithEmailAndPassword(user, password)\n      .then((user) => {\n        setUser('')\n        setPassword('')\n        setIsSignedIn(true)\n      })\n      .catch((err) => {\n        alert(err)\n      })\n  }\n\n  const handleSignIn = () => {\n      firebase.auth()\n        .signInWithEmailAndPassword(document.getElementById('email').value, document.getElementById('password').value)\n        .then((user) => {\n          setUser('')\n          setPassword('')\n          setIsSignedIn(true)\n        })\n        .catch((error) => {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n          alert(\"Wrong Login\");\n        });\n    }\n\n  const handleSignOut = () => {\n    firebase.auth()\n      .signOut()\n      .then(() => {\n        setIsSignedIn(false)\n      })\n      .catch((err) => {\n        alert(err)\n      })\n  }\n\n  const handleGetRequest = () => {\n    const Http = new XMLHttpRequest();\n    const url='https://1o6q3c8scf.execute-api.us-east-1.amazonaws.com/s3';\n    Http.open(\"GET\", url);\n    Http.send();\n\n    Http.onreadystatechange = (e) => {\n      if (Http.readyState == 4 && Http.status == 200)\n      {\n        if (Http.responseText)\n         {\n          songs = JSON.parse(Http.responseText);\n\n          // document.getElementById('songInfo').style.display = 'inline-block';\n          // document.getElementById(\"songInfo\").src = songs;\n          songs.forEach(function callback(item, index) {\n            var song = document.createElement(\"LI\");   // Create a <button> element\n            song.innerHTML = \"Song \" + index; \n            song.id = \"Song_\" + index;\n            song.onclick = function(){ setAudioPlayer(item); } ;                 // Insert text\n            document.getElementById('songs').appendChild(song);\n            UpdateSongInfo(item, song.id);\n          });\n         }\n      }\n    }\n  }\n\n  const setAudioPlayer = (songURL) => {\n    document.getElementById('songPlayer').src = songURL;\n  }\n\n  const UpdateSongInfo = (link, songID)  =>  {\n    var path = link.split('/');\n\n    // document.getElementById(\"artist\").innerHTML = PathFromUrl(path[1]);\n    // document.getElementById(\"album\").innerHTML = PathFromUrl(path[2]);\n    document.getElementById(songID).innerHTML = PathFromUrl(path[4]) + \"/\" + PathFromUrl(path[5]).split('?')[0];\n    console.log(PathFromUrl(path[0]));\n    console.log(PathFromUrl(path[1]));\n    console.log(PathFromUrl(path[2]));\n    console.log(PathFromUrl(path[3]));\n    console.log(PathFromUrl(path[4]));\n    console.log(PathFromUrl(path[5]).split('?')[0]);\n    console.log(link);\n\n  }\n\n const PathFromUrl = (path)  =>  {\n    path = path.replace(/%20/g, \" \");\n    path = path.replace(/\\.mp3/g, \"\");\n    return path;\n  }\n\n\n\n  if(isSignedIn === false) {\n    return (\n      <div className=\"App\">\n        <h1 id=\"title\">\n          Sign In\n        </h1>\n        <input type=\"text\" className= \"loginField\" id=\"email\" name=\"email\" label=\"email\" placeholder=\"Email\"\n          value={user}\n          onChange={evt => setUser(evt.target.value)}\n        /> <br/>\n        <input type=\"text\" className= \"loginField\" id=\"password\" name=\"password\" label=\"password\" placeholder=\"Password\"\n          value={password}\n          onChange={evt => setPassword(evt.target.value)}\n        /> <br/>\n        <div className=\"buttons\">\n        <button className=\"btn\" id = \"signin\"  onClick={handleSignIn}>\n          Sign In\n        </button>\n        <button className=\"btn\" id = \"signup\"  onClick={handleSignUp}>\n          Sign Up\n        </button>\n        </div>\n         <br/>\n        <button className=\"googleButton\" id = \"googlesignin\" onClick={googleSignIn}>\n          Sign In - Google\n        </button>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n      <h2>Artists</h2>\n      {handleGetRequest()}\n      <section class=\"container\">\n        <div class=\"one\"> \n          <ul id=\"songs\"></ul> \n        </div>\n        <div class=\"two\">      \n          <ReactAudioPlayer id=\"songPlayer\"\n            src=\"\"\n            autoPlay\n            controls\n          />\n        </div>\n      </section>\n        <button className=\"signOutButton\" id= \"signout\" onClick={handleSignOut}>\n          Sign Out\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default App; ","/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/reportWebVitals.js",[],"/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/index.js",[],{"ruleId":"25","severity":1,"message":"26","line":8,"column":20,"nodeType":"27","messageId":"28","endLine":8,"endColumn":26},{"ruleId":"25","severity":1,"message":"29","line":9,"column":3,"nodeType":"27","messageId":"28","endLine":9,"endColumn":9},{"ruleId":"25","severity":1,"message":"30","line":10,"column":3,"nodeType":"27","messageId":"28","endLine":10,"endColumn":8},{"ruleId":"25","severity":1,"message":"31","line":11,"column":3,"nodeType":"27","messageId":"28","endLine":11,"endColumn":7},{"ruleId":"25","severity":1,"message":"32","line":12,"column":3,"nodeType":"27","messageId":"28","endLine":12,"endColumn":11},{"ruleId":"25","severity":1,"message":"33","line":13,"column":3,"nodeType":"27","messageId":"28","endLine":13,"endColumn":13},{"ruleId":"25","severity":1,"message":"34","line":69,"column":15,"nodeType":"27","messageId":"28","endLine":69,"endColumn":24},{"ruleId":"25","severity":1,"message":"35","line":70,"column":15,"nodeType":"27","messageId":"28","endLine":70,"endColumn":27},{"ruleId":"36","severity":1,"message":"37","line":93,"column":27,"nodeType":"38","messageId":"39","endLine":93,"endColumn":29},{"ruleId":"36","severity":1,"message":"37","line":93,"column":47,"nodeType":"38","messageId":"39","endLine":93,"endColumn":49},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]