[{"/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/App.js":"1","/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/reportWebVitals.js":"2","/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/index.js":"3"},{"size":9495,"mtime":1614237032087,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1609982029303,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1609982029303,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"9asx28",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/App.js",["15","16","17","18","19","20","21","22","23"],"// import logo from './logo.svg';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport ReactAudioPlayer from 'react-audio-player';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from \"react-router-dom\";\nimport { useState } from 'react';\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBwDxECAF6BY1nX2l7FWKE7qPNX80f_iNs\",\n  authDomain: \"cs493-2021-957ba.firebaseapp.com\",\n  projectId: \"cs493-2021-957ba\",\n  storageBucket: \"cs493-2021-957ba.appspot.com\",\n  messagingSenderId: \"702882989073\",\n  appId: \"1:702882989073:web:b1c364800e7905af9a9db0\",\n  measurementId: \"G-KLSL1WY0EW\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n const App = () => {\n//function App () {\n  const [user, setUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const provider = new firebase.auth.GoogleAuthProvider();\n  var songs = [];\n  var artist_album = {};\n  var album_song = {};\n\n  const googleSignIn = () => {\n    firebase.auth()\n      .signInWithPopup(provider)\n      .then((res) => {\n        console.log('Signed in!')\n        setIsSignedIn(true)\n      })\n  }\n\n  const handleSignUp = () => {\n    firebase.auth()\n      .createUserWithEmailAndPassword(user, password)\n      .then((user) => {\n        setUser('')\n        setPassword('')\n        setIsSignedIn(true)\n      })\n      .catch((err) => {\n        alert(err)\n      })\n  }\n\n  const handleSignIn = () => {\n      firebase.auth()\n        .signInWithEmailAndPassword(document.getElementById('email').value, document.getElementById('password').value)\n        .then((user) => {\n          setUser('')\n          setPassword('')\n          setIsSignedIn(true)\n        })\n        .catch((error) => {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n          alert(\"Wrong Login\");\n        });\n    }\n\n  const handleSignOut = () => {\n    firebase.auth()\n      .signOut()\n      .then(() => {\n        setIsSignedIn(false)\n      })\n      .catch((err) => {\n        alert(err)\n      })\n  }\n\n  const handleGetRequest = () => {\n    const Http = new XMLHttpRequest();\n    const url='https://1o6q3c8scf.execute-api.us-east-1.amazonaws.com/s3';\n    Http.open(\"GET\", url);\n    Http.send();\n\n    Http.onreadystatechange = (e) => {\n      if (Http.readyState == 4 && Http.status == 200)\n      {\n        if (Http.responseText)\n         {\n          songs = JSON.parse(Http.responseText);\n          songs.forEach(function callback(item, index) {\n            BuildDirLists(item);\n          });\n          setArtistButtons();\n         }\n      }\n    }\n  }\n\n  const setArtistButtons = () => {\n    document.getElementById('artist_container').style.display = 'inline-block';\n    document.getElementById('song_container').style.display = 'none';\n\n    document.getElementById('album_container').style.display = 'none';\n\n      var keys = Object.keys(artist_album);\n      keys.forEach(function callback(item, index) {\n        var artist = document.createElement(\"LI\");\n        var button = document.createElement(\"BUTTON\");\n        button.innerHTML = item; \n        artist.id = \"Artist_\" + index;\n        button.id = \"Artist_button_\" + index;\n        button.className = \"artist_btn\";\n        button.onclick = function(){ setAlbumButtons(item); } ;   \n        document.getElementById('artists').appendChild(artist);\n        document.getElementById(\"Artist_\" + index).appendChild(button);\n    });\n  }\n\n  const setAlbumButtons = (artist) => {\n    document.getElementById('artist_container').style.display = 'none';\n    document.getElementById('song_container').style.display = 'none';\n\n    document.getElementById('album_container').style.display = 'inline-block';\n\n      var keys = artist_album[artist];\n      keys.forEach(function callback(item, index) {\n        var album = document.createElement(\"LI\");\n        var button = document.createElement(\"BUTTON\");\n        button.innerHTML = item; \n        album.id = \"Album_\" + index;\n        button.id = \"Album_button_\" + index;\n        button.className = \"album_btn\";\n        button.onclick = function(){ setSongButtons(item, artist); } ;   \n        document.getElementById('albums').appendChild(album);\n        document.getElementById(\"Album_\" + index).appendChild(button);\n        document.getElementById(\"album_back\").onclick = function(){albumBack()};\n    });\n  }\n\n  const setSongButtons = (album, artist) => {\n    document.getElementById('album_container').style.display = 'none';\n    document.getElementById('artist_container').style.display = 'none';\n\n    document.getElementById('song_container').style.display = 'inline-block';\n\n    var keys = album_song[album];\n    keys.forEach(function callback(item, index) {\n      var song = document.createElement(\"LI\");\n      var button = document.createElement(\"BUTTON\");\n      button.innerHTML = \"Song \" + index; \n      song.id = \"Song_\" + index;\n      button.id = \"Song_button_\" + index;\n      button.className = \"song_btn\";\n      button.onclick = function(){ setAudioPlayer(item); } ;   \n      document.getElementById('songs').appendChild(song);\n      document.getElementById(\"Song_\" + index).appendChild(button);\n      document.getElementById(\"song_back\").onclick = function(){ songBack(); };\n      UpdateSongInfo(item, button.id);\n    });\n  }\n\n  const songBack = () => {\n    document.getElementById('songs').innerHTML = \"\";\n    document.getElementById('artist_container').style.display = 'none';\n    document.getElementById('song_container').style.display = 'none';\n\n    document.getElementById('album_container').style.display = 'inline-block';\n\n  }\n\n  const albumBack = () => {\n    document.getElementById('albums').innerHTML = \"\";\n    document.getElementById('artist_container').style.display = 'inline-block';\n    document.getElementById('song_container').style.display = 'none';\n\n    document.getElementById('album_container').style.display = 'none';\n\n  }\n\n  const setAudioPlayer = (songURL) => {\n    document.getElementById('songPlayer').src = songURL;\n  }\n\n  const BuildDirLists = (link) => {\n    var path = link.split('/');\n    var song = link;\n    var album = ParseUrl(path[4]);\n    var artist = ParseUrl(path[3]);\n\n    if (artist in artist_album){\n      if(artist_album[artist].includes(album)){\n        console.log(album);\n      }else{\n        artist_album[artist].push(album);\n      }\n        \n    }else {\n      artist_album[artist] = [];\n      artist_album[artist].push(album);\n    }\n    \n    if (album in album_song){\n      album_song[album].push(song);\n      \n    } else{\n      album_song[album] = [];\n      album_song[album].push(song);\n    } \n    \n  }\n\n  const UpdateSongInfo = (link, songID)  =>  {\n    var path = link.split('/');\n\n    // document.getElementById(\"artist\").innerHTML = ParseUrl(path[1]);\n    // document.getElementById(\"album\").innerHTML = ParseUrl(path[2]);\n    document.getElementById(songID).innerHTML = ParseUrl(path[5]).split('?')[0];\n    console.log(ParseUrl(path[0]));\n    console.log(ParseUrl(path[1]));\n    console.log(ParseUrl(path[2]));\n    console.log(ParseUrl(path[4]));\n    console.log(ParseUrl(path[5]));\n    console.log(link);\n\n  }\n\n const ParseUrl = (path)  =>  {\n    path = path.replace(/%20/g, \" \");\n    path = path.replace(/\\.mp3/g, \"\");\n    return path;\n  }\n\n\n\n\n\n  if(isSignedIn === false) {\n    return (\n      <div className=\"App\">\n        <h1 id=\"title\">\n          Sign In\n        </h1>\n        <input type=\"text\" className= \"loginField\" id=\"email\" name=\"email\" label=\"email\" placeholder=\"Email\"\n          value={user}\n          onChange={evt => setUser(evt.target.value)}\n        /> <br/>\n        <input type=\"text\" className= \"loginField\" id=\"password\" name=\"password\" label=\"password\" placeholder=\"Password\"\n          value={password}\n          onChange={evt => setPassword(evt.target.value)}\n        /> <br/>\n        <div className=\"buttons\">\n        <button className=\"btn\" id = \"signin\"  onClick={handleSignIn}>\n          Sign In\n        </button>\n        <button className=\"btn\" id = \"signup\"  onClick={handleSignUp}>\n          Sign Up\n        </button>\n        </div>\n         <br/>\n        <button className=\"googleButton\" id = \"googlesignin\" onClick={googleSignIn}>\n          Sign In - Google\n        </button>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n      <button className=\"signOutButton\" id= \"signout\" onClick={handleSignOut}>\n        Sign Out\n      </button>\n      <h2>Shamify</h2>\n      {handleGetRequest()}\n\n      <section class=\"artist_container\" id=\"artist_container\">\n        <div class=\"one\"> \n          <ul id=\"artists\"></ul> \n        </div>\n        <div class=\"two\">      \n          \n        </div>\n      </section>\n      <section class=\"album_container\" id=\"album_container\">\n        <button id =\"album_back\">\n          Back\n        </button>\n        <div class=\"one\"> \n          <ul id=\"albums\"></ul> \n        </div>\n        <div class=\"two\">      \n          \n        </div>\n      </section>\n      <section class=\"song_container\" id=\"song_container\">\n        <button id =\"song_back\">Back</button>\n        <div class=\"one\"> \n          <ul id=\"songs\"></ul> \n        </div>\n        <div class=\"two\">      \n          <ReactAudioPlayer id=\"songPlayer\"\n            src=\"\"\n            autoPlay\n            controls\n          />\n        </div>\n      </section>\n      </div>\n    )\n  }\n}\n\n\nexport default App; ","/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/reportWebVitals.js",[],"/Users/natashiawhite/Desktop/CS_493/cs493_2021/src/index.js",[],{"ruleId":"24","severity":1,"message":"25","line":7,"column":8,"nodeType":"26","messageId":"27","endLine":7,"endColumn":16},{"ruleId":"24","severity":1,"message":"28","line":9,"column":20,"nodeType":"26","messageId":"27","endLine":9,"endColumn":26},{"ruleId":"24","severity":1,"message":"29","line":10,"column":3,"nodeType":"26","messageId":"27","endLine":10,"endColumn":9},{"ruleId":"24","severity":1,"message":"30","line":11,"column":3,"nodeType":"26","messageId":"27","endLine":11,"endColumn":8},{"ruleId":"24","severity":1,"message":"31","line":12,"column":3,"nodeType":"26","messageId":"27","endLine":12,"endColumn":12},{"ruleId":"24","severity":1,"message":"32","line":70,"column":15,"nodeType":"26","messageId":"27","endLine":70,"endColumn":24},{"ruleId":"24","severity":1,"message":"33","line":71,"column":15,"nodeType":"26","messageId":"27","endLine":71,"endColumn":27},{"ruleId":"34","severity":1,"message":"35","line":94,"column":27,"nodeType":"36","messageId":"37","endLine":94,"endColumn":29},{"ruleId":"34","severity":1,"message":"35","line":94,"column":47,"nodeType":"36","messageId":"37","endLine":94,"endColumn":49},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useParams' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]